# ./.github/workflows/ci-quality-check.yml

name: CI
on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
  push:
    branches:
      - main

jobs:
  security-check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Install Trivy
      run: |
        sudo apt-get update
        sudo apt-get install -y wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install -y trivy

    - name: Scan repository for vulnerabilities
      continue-on-error: false
      run: |
        trivy fs --severity HIGH,CRITICAL --output trivy-report.txt .

    - name: Build Docker images for scanning
      run: |
        cd src/service
        docker build -t backend:latest .
        cd ../client
        docker build -t frontend:latest .

    - name: Scan backend Docker image for vulnerabilities
      continue-on-error: true
      run: |
        trivy image --severity HIGH,CRITICAL --output trivy-backend-report.txt backend:latest

    - name: Scan frontend Docker image for vulnerabilities
      continue-on-error: true
      run: |
        trivy image --severity HIGH,CRITICAL --output trivy-frontend-report.txt frontend:latest

    - name: Upload Trivy scan reports
      uses: actions/upload-artifact@v4
      with:
        name: trivy-reports
        path: |
          trivy-report.txt
          trivy-backend-report.txt
          trivy-frontend-report.txt


  quality-check-backend:
    runs-on: ubuntu-latest
    needs: [security-check]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
          fetch-depth: 1 # Only get the latest commit; 0: get will git commit

    - name: Setup prerequisites
      uses: ./.github/actions/prerequisites

    - name: Rename environment file
      run: mv src/service/sample.env src/service/.env

    - name: Run backend tests
      shell: bash
      run: task test-backend

    - name: Run backend tests coverage
      shell: bash
      run: task test-coverage-backend
    
    - name: Upload backend coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: backend-coverage-reports
        path: |
          src/service/coverage.xml
          src/service/htmlcov

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: src/service/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
    
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  # TODO: test front-end